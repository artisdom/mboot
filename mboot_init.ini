DEFINE LONG hold;

FUNC void _MapRAMAt0(){
	hold = _RDWORD(0x00000000);
	_WDWORD(0x00000000,0xAAAAAAAA);
	if(_RDWORD(0x00000000) != 0xAAAAAAAA)
	{
		_WDWORD(0xFFFFED00,0x03);    // toggle remap bits
	}
	else
	{
		_WDWORD(0x00000000,hold);
	}
}

FUNC void _InitBasic(){
	_WDWORD(0xFFFFFD44,0x3EFF8FFF);
	_WDWORD(0xFFFFFD14,0x00000001);
	_WDWORD(0xFFFFFD08,0xA5000001);
}

FUNC void _InitClock(){
	_WDWORD(0xFFFFFC20,0x00008001);
	_sleep_(5);
	_WDWORD(0xFFFFFC30,0x00001301);
	_WDWORD(0xFFFFFC80,0x0);
	_WDWORD(0xFFFFFC28,0x20C73F03);
	_sleep_(10);
	_WDWORD(0xFFFFFC30,0x00001302);
	_sleep_(5);
	_WDWORD(0xFFFFFC1C,0xF1F10000);
	_sleep_(5);
	if(_RDWORD(0xFFFFFD50) != 0xA)
	{
		_WDWORD(0xFFFFFD50,0x3);
		_sleep_(5);
		_WDWORD(0xFFFFFD50,0xB);
		_sleep_(5);
		_WDWORD(0xFFFFFD50,0xA);
		_sleep_(5);
	}	
	_WDWORD(0xFFFFFC00,0x344);
	_WDWORD(0xFFFFFC40,0x106);
	_WDWORD(0xFFFFFC44,0x106);
	_sleep_(5);
}

FUNC void _InitGPIO(){
	_WDWORD(0xFFFFF800,0x1803EC3F);
	_WDWORD(0xFFFFF804,0xE7FC13C0);
	_WDWORD(0xFFFFF810,0x08000005);
	_WDWORD(0xFFFFF814,0x1003EC3A);
	_WDWORD(0xFFFFF820,0x00030000);
	_WDWORD(0xFFFFF824,0x1000EC38);
	_WDWORD(0xFFFFF840,0x1002EC12);
	_WDWORD(0xFFFFF844,0xEFF113ED);
	_WDWORD(0xFFFFF848,0x0);
	_WDWORD(0xFFFFF850,0x0);
	_WDWORD(0xFFFFF854,0xFFFFFFFF);
	_WDWORD(0xFFFFF860,0xFFFFFFFF);
	_WDWORD(0xFFFFF864,0xF0F3026A);
	_WDWORD(0xFFFFF870,0xE0F003C0);
	_WDWORD(0xFFFFF874,0x070C1000);
}

_InitClock();
_MapRAMAt0();
_InitBasic();
_InitGPIO();

LOAD .\\output\\mboot.axf INCREMENTAL
PC = 0x300000;
g,main

; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--thumb --list --debug -c --asm --interleave --gnu -o.\output\pmc.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\pmc.d --cpu=ARM926EJ-S --apcs=interwork -O1 -I.\atmel -I.\ -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\Atmel\SAM9M10 -Dat91sam9m10 -Dddram -DNOFPUT -DTRACE_LEVEL=4 --omf_browse=.\output\pmc.crf atmel\pmc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  PMC_DisableProcessorClock PROC
;;;87     //------------------------------------------------------------------------------
;;;88     void PMC_DisableProcessorClock(void)
000000  4849              LDR      r0,|L1.296|
;;;89     {    
;;;90         AT91C_BASE_PMC->PMC_SCDR = AT91C_PMC_PCK;   
000002  2101              MOVS     r1,#1
000004  6041              STR      r1,[r0,#4]
                  |L1.6|
;;;91         while ((AT91C_BASE_PMC->PMC_SCSR & AT91C_PMC_PCK) != AT91C_PMC_PCK); 
000006  6881              LDR      r1,[r0,#8]
000008  07c9              LSLS     r1,r1,#31
00000a  d0fc              BEQ      |L1.6|
;;;92     }
00000c  4770              BX       lr
;;;93     
                          ENDP

                  PMC_EnablePeripheral PROC
;;;99     //------------------------------------------------------------------------------
;;;100    void PMC_EnablePeripheral(unsigned int id)
00000e  b510              PUSH     {r4,lr}
;;;101    {
000010  0004              MOVS     r4,r0
;;;102        SANITY_CHECK(id < 32);
;;;103    
;;;104        if ((AT91C_BASE_PMC->PMC_PCSR & (1 << id)) == (1 << id)) {
000012  4845              LDR      r0,|L1.296|
000014  2201              MOVS     r2,#1
000016  6983              LDR      r3,[r0,#0x18]
000018  40a2              LSLS     r2,r2,r4
00001a  0011              MOVS     r1,r2
00001c  4399              BICS     r1,r1,r3
00001e  d001              BEQ      |L1.36|
;;;105    
;;;106            TRACE_INFO("PMC_EnablePeripheral: clock of peripheral"
;;;107                       " %u is already enabled\n\r",
;;;108                       id);
;;;109        }
;;;110        else {
;;;111    
;;;112            AT91C_BASE_PMC->PMC_PCER = 1 << id;
000020  6102              STR      r2,[r0,#0x10]
;;;113        }
;;;114    }
000022  bd10              POP      {r4,pc}
                  |L1.36|
000024  201b              MOVS     r0,#0x1b              ;106
000026  f7fffffe          BL       ShellPutByte
00002a  a040              ADR      r0,|L1.300|
00002c  f7fffffe          BL       ShellPrintf
000030  201b              MOVS     r0,#0x1b              ;106
000032  f7fffffe          BL       ShellPutByte
000036  a040              ADR      r0,|L1.312|
000038  f7fffffe          BL       ShellPrintf
00003c  483f              LDR      r0,|L1.316|
00003e  0021              MOVS     r1,r4                 ;106
000040  f7fffffe          BL       ShellPrintf
000044  a03e              ADR      r0,|L1.320|
000046  f7fffffe          BL       ShellPrintf
00004a  bd10              POP      {r4,pc}
;;;115    
                          ENDP

                  PMC_DisablePeripheral PROC
;;;121    //------------------------------------------------------------------------------
;;;122    void PMC_DisablePeripheral(unsigned int id)
00004c  b510              PUSH     {r4,lr}
;;;123    {
00004e  0004              MOVS     r4,r0
;;;124        SANITY_CHECK(id < 32);
;;;125    
;;;126        if ((AT91C_BASE_PMC->PMC_PCSR & (1 << id)) != (1 << id)) {
000050  4835              LDR      r0,|L1.296|
000052  2201              MOVS     r2,#1
000054  6983              LDR      r3,[r0,#0x18]
000056  40a2              LSLS     r2,r2,r4
000058  0011              MOVS     r1,r2
00005a  4399              BICS     r1,r1,r3
00005c  d013              BEQ      |L1.134|
;;;127    
;;;128            TRACE_INFO("PMC_DisablePeripheral: clock of peripheral"
00005e  201b              MOVS     r0,#0x1b
000060  f7fffffe          BL       ShellPutByte
000064  a031              ADR      r0,|L1.300|
000066  f7fffffe          BL       ShellPrintf
00006a  201b              MOVS     r0,#0x1b
00006c  f7fffffe          BL       ShellPutByte
000070  a031              ADR      r0,|L1.312|
000072  f7fffffe          BL       ShellPrintf
000076  0021              MOVS     r1,r4
000078  a032              ADR      r0,|L1.324|
00007a  f7fffffe          BL       ShellPrintf
00007e  a030              ADR      r0,|L1.320|
000080  f7fffffe          BL       ShellPrintf
;;;129                       " %u is not enabled\n\r",
;;;130                       id);
;;;131        }
;;;132        else {
;;;133    
;;;134            AT91C_BASE_PMC->PMC_PCDR = 1 << id;
;;;135        }
;;;136    }
000084  bd10              POP      {r4,pc}
                  |L1.134|
000086  6142              STR      r2,[r0,#0x14]         ;134
000088  bd10              POP      {r4,pc}
;;;137    
                          ENDP

                  PMC_EnableAllPeripherals PROC
;;;141    //------------------------------------------------------------------------------
;;;142    void PMC_EnableAllPeripherals(void)
00008a  b510              PUSH     {r4,lr}
;;;143    {
;;;144        AT91C_BASE_PMC->PMC_PCER = MASK_STATUS;
00008c  493d              LDR      r1,|L1.388|
00008e  4826              LDR      r0,|L1.296|
000090  6101              STR      r1,[r0,#0x10]
;;;145        while( (AT91C_BASE_PMC->PMC_PCSR & MASK_STATUS) != MASK_STATUS);
000092  493d              LDR      r1,|L1.392|
                  |L1.148|
000094  6982              LDR      r2,[r0,#0x18]
000096  0092              LSLS     r2,r2,#2
000098  0912              LSRS     r2,r2,#4
00009a  428a              CMP      r2,r1
00009c  d1fa              BNE      |L1.148|
;;;146        TRACE_INFO("Enable all periph clocks\n\r"); 
00009e  201b              MOVS     r0,#0x1b
0000a0  f7fffffe          BL       ShellPutByte
0000a4  a021              ADR      r0,|L1.300|
0000a6  f7fffffe          BL       ShellPrintf
0000aa  201b              MOVS     r0,#0x1b
0000ac  f7fffffe          BL       ShellPutByte
0000b0  a021              ADR      r0,|L1.312|
0000b2  f7fffffe          BL       ShellPrintf
0000b6  a035              ADR      r0,|L1.396|
0000b8  f7fffffe          BL       ShellPrintf
0000bc  a020              ADR      r0,|L1.320|
0000be  f7fffffe          BL       ShellPrintf
;;;147    }
0000c2  bd10              POP      {r4,pc}
;;;148    
                          ENDP

                  PMC_DisableAllPeripherals PROC
;;;152    //------------------------------------------------------------------------------
;;;153    void PMC_DisableAllPeripherals(void)
0000c4  b510              PUSH     {r4,lr}
;;;154    {
;;;155        AT91C_BASE_PMC->PMC_PCDR = MASK_STATUS;
0000c6  492f              LDR      r1,|L1.388|
0000c8  4817              LDR      r0,|L1.296|
0000ca  6141              STR      r1,[r0,#0x14]
                  |L1.204|
;;;156        while((AT91C_BASE_PMC->PMC_PCSR & MASK_STATUS) != 0);
0000cc  6981              LDR      r1,[r0,#0x18]
0000ce  0089              LSLS     r1,r1,#2
0000d0  0909              LSRS     r1,r1,#4
0000d2  d1fb              BNE      |L1.204|
;;;157        TRACE_INFO("Disable all periph clocks\n\r");
0000d4  201b              MOVS     r0,#0x1b
0000d6  f7fffffe          BL       ShellPutByte
0000da  a014              ADR      r0,|L1.300|
0000dc  f7fffffe          BL       ShellPrintf
0000e0  201b              MOVS     r0,#0x1b
0000e2  f7fffffe          BL       ShellPutByte
0000e6  a014              ADR      r0,|L1.312|
0000e8  f7fffffe          BL       ShellPrintf
0000ec  a02e              ADR      r0,|L1.424|
0000ee  f7fffffe          BL       ShellPrintf
0000f2  a013              ADR      r0,|L1.320|
0000f4  f7fffffe          BL       ShellPrintf
;;;158    }
0000f8  bd10              POP      {r4,pc}
;;;159    
                          ENDP

                  PMC_IsAllPeriphEnabled PROC
;;;162    //-----------------------------------------------------------------------------
;;;163    unsigned int PMC_IsAllPeriphEnabled(void)
0000fa  480b              LDR      r0,|L1.296|
;;;164    {
;;;165        return (AT91C_BASE_PMC->PMC_PCSR == MASK_STATUS);
0000fc  6980              LDR      r0,[r0,#0x18]
0000fe  4921              LDR      r1,|L1.388|
000100  4288              CMP      r0,r1
000102  d101              BNE      |L1.264|
000104  2001              MOVS     r0,#1
;;;166    }
000106  4770              BX       lr
                  |L1.264|
000108  2000              MOVS     r0,#0                 ;165
00010a  4770              BX       lr
;;;167    
                          ENDP

                  PMC_IsPeriphEnabled PROC
;;;170    //-----------------------------------------------------------------------------
;;;171    unsigned int PMC_IsPeriphEnabled(unsigned int id)
00010c  4906              LDR      r1,|L1.296|
;;;172    {
;;;173        return (AT91C_BASE_PMC->PMC_PCSR & (1 << id));  
00010e  6989              LDR      r1,[r1,#0x18]
000110  2201              MOVS     r2,#1
000112  4082              LSLS     r2,r2,r0
000114  0008              MOVS     r0,r1
000116  4010              ANDS     r0,r0,r2
;;;174    }
000118  4770              BX       lr
;;;175    //------------------------------------------------------------------------------
                          ENDP

                  PMC_CPUInIdleMode PROC
;;;177    //------------------------------------------------------------------------------
;;;178    void PMC_CPUInIdleMode(void)
00011a  b510              PUSH     {r4,lr}
;;;179    {
;;;180    #ifndef CP15_PRESENT	
;;;181        PMC_DisableProcessorClock();
;;;182    #else
;;;183        AT91C_BASE_PMC->PMC_SCDR = AT91C_PMC_PCK; 
00011c  4902              LDR      r1,|L1.296|
00011e  2001              MOVS     r0,#1
000120  6048              STR      r0,[r1,#4]
;;;184        CP15_WaitForInterrupt();
000122  f7fffffe          BL       CP15_WaitForInterrupt
;;;185    #endif
;;;186    }
000126  bd10              POP      {r4,pc}
;;;187    
                          ENDP

                  |L1.296|
                          DCD      0xfffffc00
                  |L1.300|
00012c  5b313b31          DCB      "[1;1;34mI: ",0
000130  3b33346d
000134  493a2000
                  |L1.312|
000138  5b6d00            DCB      "[m",0
00013b  00                DCB      0
                  |L1.316|
                          DCD      ||.constdata||
                  |L1.320|
000140  0a0d00            DCB      "\n\r",0
000143  00                DCB      0
                  |L1.324|
000144  504d435f          DCB      "PMC_DisablePeripheral: clock of peripheral %u is not en"
000148  44697361
00014c  626c6550
000150  65726970
000154  68657261
000158  6c3a2063
00015c  6c6f636b
000160  206f6620
000164  70657269
000168  70686572
00016c  616c2025
000170  75206973
000174  206e6f74
000178  20656e  
00017b  61626c65          DCB      "abled\n\r",0
00017f  640a0d00
000183  00                DCB      0
                  |L1.388|
                          DCD      0x3ffffffc
                  |L1.392|
                          DCD      0x0fffffff
                  |L1.396|
00018c  456e6162          DCB      "Enable all periph clocks\n\r",0
000190  6c652061
000194  6c6c2070
000198  65726970
00019c  6820636c
0001a0  6f636b73
0001a4  0a0d00  
0001a7  00                DCB      0
                  |L1.424|
0001a8  44697361          DCB      "Disable all periph clocks\n\r",0
0001ac  626c6520
0001b0  616c6c20
0001b4  70657269
0001b8  70682063
0001bc  6c6f636b
0001c0  730a0d00

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  504d435f          DCB      0x50,0x4d,0x43,0x5f
000004  456e6162          DCB      0x45,0x6e,0x61,0x62
000008  6c655065          DCB      0x6c,0x65,0x50,0x65
00000c  72697068          DCB      0x72,0x69,0x70,0x68
000010  6572616c          DCB      0x65,0x72,0x61,0x6c
000014  3a20636c          DCB      0x3a,0x20,0x63,0x6c
000018  6f636b20          DCB      0x6f,0x63,0x6b,0x20
00001c  6f662070          DCB      0x6f,0x66,0x20,0x70
000020  65726970          DCB      0x65,0x72,0x69,0x70
000024  68657261          DCB      0x68,0x65,0x72,0x61
000028  6c202575          DCB      0x6c,0x20,0x25,0x75
00002c  20697320          DCB      0x20,0x69,0x73,0x20
000030  616c7265          DCB      0x61,0x6c,0x72,0x65
000034  61647920          DCB      0x61,0x64,0x79,0x20
000038  656e6162          DCB      0x65,0x6e,0x61,0x62
00003c  6c65640a          DCB      0x6c,0x65,0x64,0x0a
000040  0d00              DCB      0x0d,0x00

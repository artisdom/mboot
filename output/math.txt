; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--thumb --list --debug -c --asm --interleave --gnu -o.\output\math.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\math.d --cpu=ARM926EJ-S --apcs=interwork -O1 -I.\atmel -I.\ -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\Atmel\SAM9M10 -Dat91sam9m10 -Dddram -DNOFPUT -DTRACE_LEVEL=4 --omf_browse=.\output\math.crf atmel\math.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  min PROC
;;;49     //------------------------------------------------------------------------------
;;;50     unsigned int min(unsigned int a, unsigned int b)
000000  0002              MOVS     r2,r0
;;;51     { 
000002  0008              MOVS     r0,r1
;;;52         if (a < b) {
000004  4282              CMP      r2,r0
000006  d200              BCS      |L1.10|
;;;53     
;;;54             return a;
000008  0010              MOVS     r0,r2
                  |L1.10|
;;;55         }
;;;56         else {
;;;57     
;;;58             return b;
;;;59         }
;;;60     }
00000a  4770              BX       lr
;;;61     
                          ENDP

                  absv PROC
;;;66     // Do not call this function "abs", problem with gcc !
;;;67     unsigned int absv(signed int value)
00000c  2800              CMP      r0,#0
;;;68     {
;;;69         if (value < 0) {
00000e  da00              BGE      |L1.18|
;;;70     
;;;71             return -value;
000010  4240              RSBS     r0,r0,#0
                  |L1.18|
;;;72         }
;;;73         else {
;;;74     
;;;75             return value;
;;;76         }
;;;77     }
000012  4770              BX       lr
;;;78     
                          ENDP

                  power PROC
;;;83     //------------------------------------------------------------------------------
;;;84     unsigned int power(unsigned int x, unsigned int y)
000014  0002              MOVS     r2,r0
;;;85     {
;;;86         unsigned int result = 1;
000016  2001              MOVS     r0,#1
;;;87         
;;;88         while (y > 0) {
000018  e001              B        |L1.30|
                  |L1.26|
;;;89     
;;;90             result *= x;
00001a  4350              MULS     r0,r2,r0
;;;91             y--;
00001c  1e49              SUBS     r1,r1,#1
                  |L1.30|
00001e  2900              CMP      r1,#0                 ;88
000020  d1fb              BNE      |L1.26|
;;;92         } 
;;;93         return result;
;;;94     }
000022  4770              BX       lr
;;;95     
                          ENDP


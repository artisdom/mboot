; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--thumb --list --debug -c --asm --interleave --gnu -o.\output\shell.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\shell.d --cpu=ARM926EJ-S --apcs=interwork -O1 -I.\atmel -I.\ -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\Atmel\SAM9M10 -Dat91sam9m10 -Dddram -DNOFPUT -DTRACE_LEVEL=4 --omf_browse=.\output\shell.crf shell.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ShellPutByte PROC
;;;136    void
;;;137    ShellPutByte(S8 c)
000000  b510              PUSH     {r4,lr}
;;;138    {
;;;139    	DBGU_PutByte(c);
000002  f7fffffe          BL       DBGU_PutByte
;;;140    }
000006  bd10              POP      {r4,pc}
;;;141    
                          ENDP

                  ShellPrintf PROC
;;;18     U32
;;;19     ShellPrintf(const char* format,...)
000008  b40f              PUSH     {r0-r3}
;;;20     {
00000a  b570              PUSH     {r4-r6,lr}
00000c  b0c2              SUB      sp,sp,#0x108
;;;21     	S8 obuffer[256];
;;;22     	U32 i=0, cnt;
00000e  2400              MOVS     r4,#0
;;;23     	va_list ap;
;;;24     	va_start(ap,format);
000010  aa47              ADD      r2,sp,#0x11c
000012  9201              STR      r2,[sp,#4]
;;;25     	cnt = vsprintf(obuffer,format,ap);
000014  9946              LDR      r1,[sp,#0x118]
000016  a802              ADD      r0,sp,#8
000018  f7fffffe          BL       __c89vsprintf
00001c  0005              MOVS     r5,r0
00001e  ae02              ADD      r6,sp,#8              ;21
;;;26     	while(i < cnt)
;;;27     		ShellPutByte((S8)obuffer[i++]);
000020  e004              B        |L1.44|
                  |L1.34|
000022  0020              MOVS     r0,r4
000024  5c30              LDRB     r0,[r6,r0]
000026  1c64              ADDS     r4,r4,#1
000028  f7fffffe          BL       ShellPutByte
                  |L1.44|
00002c  42ac              CMP      r4,r5                 ;26
00002e  d3f8              BCC      |L1.34|
;;;28     	va_end(ap);
;;;29     	return cnt;
000030  0028              MOVS     r0,r5
;;;30     }
000032  b042              ADD      sp,sp,#0x108
000034  bc70              POP      {r4-r6}
000036  bc08              POP      {r3}
000038  b004              ADD      sp,sp,#0x10
00003a  4718              BX       r3
;;;31     
                          ENDP

                  ShellAllClear PROC
;;;32     void
;;;33     ShellAllClear(void)
00003c  b510              PUSH     {r4,lr}
;;;34     {
;;;35     	ShellPutByte(0x1b);
00003e  201b              MOVS     r0,#0x1b
000040  f7fffffe          BL       ShellPutByte
;;;36     	ShellPrintf("c");
000044  a04a              ADR      r0,|L1.368|
000046  f7fffffe          BL       ShellPrintf
;;;37     	ShellPutByte(0x1b);
00004a  201b              MOVS     r0,#0x1b
00004c  f7fffffe          BL       ShellPutByte
;;;38     	ShellPrintf("[m");
000050  a048              ADR      r0,|L1.372|
000052  f7fffffe          BL       ShellPrintf
;;;39     	ShellPutByte(0x1b);
000056  201b              MOVS     r0,#0x1b
000058  f7fffffe          BL       ShellPutByte
;;;40     	ShellPrintf("[2J\n\r\r\r\r\r\r\r");
00005c  a046              ADR      r0,|L1.376|
00005e  f7fffffe          BL       ShellPrintf
;;;41     }
000062  bd10              POP      {r4,pc}
;;;42     
                          ENDP

                  ShellSendString PROC
;;;43     void
;;;44     ShellSendString(S8 *pt)
000064  b510              PUSH     {r4,lr}
;;;45     {
000066  0004              MOVS     r4,r0
;;;46         while(*pt)
;;;47             ShellPutByte(*pt++);
000068  e002              B        |L1.112|
                  |L1.106|
00006a  1c64              ADDS     r4,r4,#1
00006c  f7fffffe          BL       ShellPutByte
                  |L1.112|
000070  7820              LDRB     r0,[r4,#0]            ;46
000072  2800              CMP      r0,#0                 ;46
000074  d1f9              BNE      |L1.106|
;;;48     }
000076  bd10              POP      {r4,pc}
;;;49     
                          ENDP

                  ShellGetByte PROC
;;;142    S8	
;;;143    ShellGetByte(void)
000078  b510              PUSH     {r4,lr}
;;;144    {
;;;145    	return DBGU_GetByte();
00007a  f7fffffe          BL       DBGU_GetByte
;;;146    }
00007e  bd10              POP      {r4,pc}
;;;147    
                          ENDP

                  ShellGetString PROC
;;;50     void
;;;51     ShellGetString(S8 *string)
000080  b570              PUSH     {r4-r6,lr}
;;;52     {
000082  0004              MOVS     r4,r0
;;;53         S8 *buf = string;
000084  0025              MOVS     r5,r4
;;;54         S8 c;
;;;55         while((c = ShellGetByte())!='\r')
000086  e005              B        |L1.148|
                  |L1.136|
;;;56         {
;;;57             if(c=='\b')
000088  2808              CMP      r0,#8
00008a  d00d              BEQ      |L1.168|
;;;58             {
;;;59                 if( (int)buf < (int)string )
;;;60                 {
;;;61                     ShellPrintf("\b \b");
;;;62                     string--;
;;;63                 }
;;;64             }
;;;65             else 
;;;66             {
;;;67                 *string++ = c;
00008c  7020              STRB     r0,[r4,#0]
00008e  1c64              ADDS     r4,r4,#1
;;;68                 ShellPutByte(c);
000090  f7fffffe          BL       ShellPutByte
                  |L1.148|
000094  f7fffffe          BL       ShellGetByte
000098  280d              CMP      r0,#0xd               ;55
00009a  d1f5              BNE      |L1.136|
;;;69             }
;;;70         }
;;;71         *string='\0';
00009c  2000              MOVS     r0,#0
00009e  7020              STRB     r0,[r4,#0]
;;;72         ShellPutByte('\n');
0000a0  200a              MOVS     r0,#0xa
0000a2  f7fffffe          BL       ShellPutByte
;;;73     }
0000a6  bd70              POP      {r4-r6,pc}
                  |L1.168|
0000a8  42a5              CMP      r5,r4                 ;59
0000aa  daf3              BGE      |L1.148|
0000ac  a035              ADR      r0,|L1.388|
0000ae  f7fffffe          BL       ShellPrintf
0000b2  1e64              SUBS     r4,r4,#1              ;62
0000b4  e7ee              B        |L1.148|
;;;74     
                          ENDP

                  ShellGetIntNum PROC
;;;75     S32
;;;76     ShellGetIntNum(void)
0000b6  b5f0              PUSH     {r4-r7,lr}
;;;77     {
0000b8  b089              SUB      sp,sp,#0x24
;;;78         char str[30];
;;;79         char *string = str;
0000ba  ad01              ADD      r5,sp,#4
;;;80         int base     = 10;
0000bc  260a              MOVS     r6,#0xa
;;;81         int minus    = 0;
0000be  2000              MOVS     r0,#0
0000c0  9000              STR      r0,[sp,#0]
;;;82         int result   = 0;
0000c2  2400              MOVS     r4,#0
;;;83         int lastIndex;    
;;;84         int i;
;;;85         
;;;86         ShellGetString(string);
0000c4  0028              MOVS     r0,r5
0000c6  f7fffffe          BL       ShellGetString
;;;87         
;;;88         if(string[0]=='-')
0000ca  4668              MOV      r0,sp
0000cc  7900              LDRB     r0,[r0,#4]
0000ce  282d              CMP      r0,#0x2d
0000d0  d102              BNE      |L1.216|
;;;89         {
;;;90             minus = 1;
0000d2  2001              MOVS     r0,#1
0000d4  9000              STR      r0,[sp,#0]
;;;91             string++;
0000d6  1c6d              ADDS     r5,r5,#1
                  |L1.216|
;;;92         }
;;;93         
;;;94         if(string[0]=='0' && (string[1]=='x' || string[1]=='X'))
0000d8  7828              LDRB     r0,[r5,#0]
0000da  2830              CMP      r0,#0x30
0000dc  d106              BNE      |L1.236|
0000de  7868              LDRB     r0,[r5,#1]
0000e0  2878              CMP      r0,#0x78
0000e2  d001              BEQ      |L1.232|
0000e4  2858              CMP      r0,#0x58
0000e6  d101              BNE      |L1.236|
                  |L1.232|
;;;95         {
;;;96             base    = 16;
0000e8  2610              MOVS     r6,#0x10
;;;97             string += 2;
0000ea  1cad              ADDS     r5,r5,#2
                  |L1.236|
;;;98         }
;;;99         
;;;100        lastIndex = strlen(string) - 1;
0000ec  0028              MOVS     r0,r5
0000ee  f7fffffe          BL       strlen
0000f2  1e47              SUBS     r7,r0,#1
;;;101        
;;;102        if(lastIndex<0)
0000f4  2f00              CMP      r7,#0
0000f6  da03              BGE      |L1.256|
;;;103            return -1;
0000f8  2000              MOVS     r0,#0
0000fa  43c0              MVNS     r0,r0
                  |L1.252|
;;;104        
;;;105        if(string[lastIndex]=='h' || string[lastIndex]=='H' )
;;;106        {
;;;107            base = 16;
;;;108            string[lastIndex] = 0;
;;;109            lastIndex--;
;;;110        }
;;;111    
;;;112        if(base==10)
;;;113        {
;;;114            result = atoi(string);
;;;115            result = minus ? (-1*result):result;
;;;116        }
;;;117        else
;;;118        {
;;;119            for(i=0;i<=lastIndex;i++)
;;;120            {
;;;121                if(isalpha(string[i]))
;;;122                {
;;;123                    if(isupper(string[i]))
;;;124                        result = (result<<4) + string[i] - 'A' + 10;
;;;125                    else
;;;126                        result = (result<<4) + string[i] - 'a' + 10;
;;;127                }
;;;128                else
;;;129                    result = (result<<4) + string[i] - '0';
;;;130            }
;;;131            result = minus ? (-1*result):result;
;;;132        }
;;;133        return result;
;;;134    }
0000fc  b009              ADD      sp,sp,#0x24
0000fe  bdf0              POP      {r4-r7,pc}
                  |L1.256|
000100  5de8              LDRB     r0,[r5,r7]            ;105
000102  2868              CMP      r0,#0x68              ;105
000104  d001              BEQ      |L1.266|
000106  2848              CMP      r0,#0x48              ;105
000108  d103              BNE      |L1.274|
                  |L1.266|
00010a  2610              MOVS     r6,#0x10              ;107
00010c  2000              MOVS     r0,#0                 ;108
00010e  55e8              STRB     r0,[r5,r7]            ;108
000110  1e7f              SUBS     r7,r7,#1              ;109
                  |L1.274|
000112  2e0a              CMP      r6,#0xa               ;112
000114  d001              BEQ      |L1.282|
000116  2600              MOVS     r6,#0                 ;119
000118  e01d              B        |L1.342|
                  |L1.282|
00011a  0028              MOVS     r0,r5                 ;114
00011c  f7fffffe          BL       atoi
000120  9900              LDR      r1,[sp,#0]            ;115
000122  2900              CMP      r1,#0                 ;115
000124  d0ea              BEQ      |L1.252|
000126  4240              RSBS     r0,r0,#0              ;115
000128  e7e8              B        |L1.252|
                  |L1.298|
00012a  f7fffffe          BL       __rt_ctype_table
00012e  6801              LDR      r1,[r0,#0]            ;121
000130  5da8              LDRB     r0,[r5,r6]            ;121
000132  2298              MOVS     r2,#0x98              ;121
000134  5c09              LDRB     r1,[r1,r0]            ;121
000136  4211              TST      r1,r2                 ;121
000138  d009              BEQ      |L1.334|
00013a  06c9              LSLS     r1,r1,#27             ;123
00013c  d503              BPL      |L1.326|
00013e  0121              LSLS     r1,r4,#4              ;124
000140  3937              SUBS     r1,r1,#0x37           ;124
000142  1844              ADDS     r4,r0,r1              ;124
000144  e006              B        |L1.340|
                  |L1.326|
000146  0121              LSLS     r1,r4,#4              ;126
000148  3957              SUBS     r1,r1,#0x57           ;126
00014a  1844              ADDS     r4,r0,r1              ;126
00014c  e002              B        |L1.340|
                  |L1.334|
00014e  0121              LSLS     r1,r4,#4              ;129
000150  3930              SUBS     r1,r1,#0x30           ;129
000152  1844              ADDS     r4,r0,r1              ;129
                  |L1.340|
000154  1c76              ADDS     r6,r6,#1              ;119
                  |L1.342|
000156  42be              CMP      r6,r7                 ;119
000158  dde7              BLE      |L1.298|
00015a  9800              LDR      r0,[sp,#0]            ;131
00015c  2800              CMP      r0,#0                 ;131
00015e  d001              BEQ      |L1.356|
000160  4260              RSBS     r0,r4,#0              ;131
000162  e7cb              B        |L1.252|
                  |L1.356|
000164  0020              MOVS     r0,r4                 ;131
000166  e7c9              B        |L1.252|
;;;135    
                          ENDP

                  ShellGetKey PROC
;;;148    S8	
;;;149    ShellGetKey(void)
000168  b510              PUSH     {r4,lr}
;;;150    {
;;;151    	return DBGU_GetKey();
00016a  f7fffffe          BL       DBGU_GetKey
;;;152    }
00016e  bd10              POP      {r4,pc}
                          ENDP

                  |L1.368|
000170  6300              DCB      "c",0
000172  00                DCB      0
000173  00                DCB      0
                  |L1.372|
000174  5b6d00            DCB      "[m",0
000177  00                DCB      0
                  |L1.376|
000178  5b324a0a          DCB      "[2J\n\r\r\r\r\r\r\r",0
00017c  0d0d0d0d
000180  0d0d0d00
                  |L1.388|
000184  08200800          DCB      "\b \b",0

; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--thumb --list --debug -c --asm --interleave --gnu -o.\output\init_hw.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\init_hw.d --cpu=ARM926EJ-S --apcs=interwork -O1 -I.\atmel -I.\ -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\Atmel\SAM9M10 -Dat91sam9m10 -Dddram -DNOFPUT -DTRACE_LEVEL=4 --omf_browse=.\output\init_hw.crf init_hw.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  InitHW_DBGU PROC
;;;155    
;;;156    static void InitHW_DBGU(void)
000000  48da              LDR      r0,|L1.876|
;;;157    {
;;;158    	rDBGU_CR = (0x1 << 7) + (0x1 << 5) + (0x1 << 3) + (0x1 << 2);
000002  21ac              MOVS     r1,#0xac
000004  6001              STR      r1,[r0,#0]
;;;159    	rDBGU_IDR = 0xFFFFFFFF;
000006  49da              LDR      r1,|L1.880|
000008  60c1              STR      r1,[r0,#0xc]
;;;160    	rDBGU_BRGR = 0x48; // (5 << 16) + 144; (0x48)
00000a  2148              MOVS     r1,#0x48
00000c  6201              STR      r1,[r0,#0x20]
;;;161    	rDBGU_MR = (0x0 << 14) + (0x4 << 9);
00000e  49d9              LDR      r1,|L1.884|
000010  6041              STR      r1,[r0,#4]
;;;162    	rDBGU_PTCR = (0x1 << 1) | (0x1 << 9);
000012  49d9              LDR      r1,|L1.888|
000014  4ad9              LDR      r2,|L1.892|
000016  6211              STR      r1,[r2,#0x20]
;;;163    	rDBGU_CR = (0x1 << 6) + (0x1 << 4);
000018  2150              MOVS     r1,#0x50
00001a  6001              STR      r1,[r0,#0]
;;;164    }
00001c  4770              BX       lr
;;;165    
                          ENDP

                  InitHW_LED PROC
;;;335    
;;;336    static void SFR_DELAY(U32 time)	// "time" is counted in "ms"
;;;337    {
;;;338    	U32 i;
;;;339    
;;;340    	if(time != 0) 
;;;341    	{
;;;342    		for(; time > 0; time--)
;;;343    		{
;;;344    			for(i = 0; i < 7300; i++)
00001e  b510              PUSH     {r4,lr}
000020  49d7              LDR      r1,|L1.896|
000022  48d8              LDR      r0,|L1.900|
000024  6001              STR      r1,[r0,#0]            ;342
000026  210f              MOVS     r1,#0xf               ;342
000028  6041              STR      r1,[r0,#4]            ;342
00002a  6141              STR      r1,[r0,#0x14]         ;342
;;;345    			{
;;;346    				__asm
;;;347    				{
;;;348    				    NOP
;;;349      				}
;;;350    			}
;;;351    		}
;;;352    	}
;;;353    }
00002c  48d6              LDR      r0,|L1.904|
00002e  210c              MOVS     r1,#0xc
000030  6001              STR      r1,[r0,#0]
000032  4ad6              LDR      r2,|L1.908|
000034  6042              STR      r2,[r0,#4]
000036  4bd6              LDR      r3,|L1.912|
000038  6083              STR      r3,[r0,#8]
00003a  2400              MOVS     r4,#0
00003c  6104              STR      r4,[r0,#0x10]
00003e  6201              STR      r1,[r0,#0x20]
000040  6242              STR      r2,[r0,#0x24]
000042  6283              STR      r3,[r0,#0x28]
000044  6304              STR      r4,[r0,#0x30]
000046  48d3              LDR      r0,|L1.916|
000048  6001              STR      r1,[r0,#0]
00004a  6042              STR      r2,[r0,#4]
00004c  6083              STR      r3,[r0,#8]
00004e  6104              STR      r4,[r0,#0x10]
000050  6201              STR      r1,[r0,#0x20]
000052  6242              STR      r2,[r0,#0x24]
000054  6283              STR      r3,[r0,#0x28]
000056  6304              STR      r4,[r0,#0x30]
000058  bd10              POP      {r4,pc}
;;;354    
                          ENDP

                  InitHW_EMIF PROC
;;;165    
;;;166    static void InitHW_EMIF(void)
00005a  4770              BX       lr
;;;167    {
;;;168    
;;;169    }
;;;170    
                          ENDP

                  InitHW_RTC PROC
;;;118    
;;;119    static void InitHW_RTC(void)
00005c  4770              BX       lr
;;;120    {
;;;121    
;;;122    }
;;;123    
                          ENDP

                  InitHW_DDRAM PROC
;;;264    
;;;265    static void InitHW_DDRAM(void)
00005e  b5f8              PUSH     {r3-r7,lr}
;;;266    {
;;;267    	U32 i = 0;
;;;268    	
;;;269    	rDDRSDRC_MD 	= 0x16;
000060  4ccd              LDR      r4,|L1.920|
000062  2016              MOVS     r0,#0x16
000064  6220              STR      r0,[r4,#0x20]
;;;270    	rDDRSDRC_CR 	= 0x3D;
000066  203d              MOVS     r0,#0x3d
000068  60a0              STR      r0,[r4,#8]
;;;271    	rDDRSDRC_TPR0 	= 0x21128226;
00006a  48cc              LDR      r0,|L1.924|
00006c  60e0              STR      r0,[r4,#0xc]
;;;272    	rDDRSDRC_TPR1 	= 0x02C8100E;
00006e  48cc              LDR      r0,|L1.928|
000070  6120              STR      r0,[r4,#0x10]
;;;273    	rDDRSDRC_TPR2 	= 0x2072;
000072  48cc              LDR      r0,|L1.932|
000074  6160              STR      r0,[r4,#0x14]
;;;274    	rDDRSDRC_MR 	= 0x1;
000076  2701              MOVS     r7,#1
000078  6027              STR      r7,[r4,#0]
;;;275    	rDDRSD_BASE0 	= 0x0;
00007a  4ecb              LDR      r6,|L1.936|
00007c  2500              MOVS     r5,#0
00007e  6035              STR      r5,[r6,#0]
;;;276    
;;;277    	SFR_DELAY(2);
000080  2002              MOVS     r0,#2
000082  f7fffffe          BL       SFR_DELAY
;;;278    	rDDRSDRC_MR 	= 0x1;
000086  6027              STR      r7,[r4,#0]
;;;279    	rDDRSD_BASE0 	= 0x0;
000088  6035              STR      r5,[r6,#0]
;;;280    	SFR_DELAY(1);
00008a  2001              MOVS     r0,#1
00008c  f7fffffe          BL       SFR_DELAY
;;;281    	rDDRSDRC_MR 	= 0x2;
000090  2002              MOVS     r0,#2
000092  6020              STR      r0,[r4,#0]
;;;282    	rDDRSD_BASE0 	= 0x0;
000094  6035              STR      r5,[r6,#0]
;;;283    	SFR_DELAY(1);
000096  2001              MOVS     r0,#1
000098  f7fffffe          BL       SFR_DELAY
;;;284    	rDDRSDRC_MR 	= 0x5;
00009c  2705              MOVS     r7,#5
00009e  6027              STR      r7,[r4,#0]
;;;285    	rDDRSD_BASE2	= 0x0;
0000a0  48c2              LDR      r0,|L1.940|
0000a2  6005              STR      r5,[r0,#0]
;;;286    	SFR_DELAY(1);
0000a4  2001              MOVS     r0,#1
0000a6  f7fffffe          BL       SFR_DELAY
;;;287    	rDDRSDRC_MR 	= 0x5;
0000aa  6027              STR      r7,[r4,#0]
;;;288    	rDDRSD_BASE3 	= 0x0;
0000ac  48c0              LDR      r0,|L1.944|
0000ae  6005              STR      r5,[r0,#0]
;;;289    	SFR_DELAY(1);
0000b0  2001              MOVS     r0,#1
0000b2  f7fffffe          BL       SFR_DELAY
;;;290    	rDDRSDRC_MR 	= 0x5;
0000b6  6027              STR      r7,[r4,#0]
;;;291    	rDDRSD_BASE1 	= 0x0;
0000b8  48be              LDR      r0,|L1.948|
0000ba  6005              STR      r5,[r0,#0]
;;;292    	SFR_DELAY(2);
0000bc  2002              MOVS     r0,#2
0000be  f7fffffe          BL       SFR_DELAY
;;;293    	i = rDDRSDRC_CR; 
0000c2  68a0              LDR      r0,[r4,#8]
;;;294    	i |= 0xBD;
0000c4  21bd              MOVS     r1,#0xbd
0000c6  4308              ORRS     r0,r0,r1
;;;295    	rDDRSDRC_CR 	= i;
0000c8  60a0              STR      r0,[r4,#8]
;;;296    	rDDRSDRC_MR 	= 0x3;
0000ca  2003              MOVS     r0,#3
0000cc  6020              STR      r0,[r4,#0]
;;;297    	rDDRSD_BASE0 	= 0x0;
0000ce  6035              STR      r5,[r6,#0]
;;;298    	SFR_DELAY(1);
0000d0  2001              MOVS     r0,#1
0000d2  f7fffffe          BL       SFR_DELAY
;;;299    	rDDRSDRC_MR 	= 0x2;
0000d6  2002              MOVS     r0,#2
0000d8  6020              STR      r0,[r4,#0]
;;;300    	rDDRSD_BASE0 	= 0x0;
0000da  6035              STR      r5,[r6,#0]
;;;301    	SFR_DELAY(1);
0000dc  2001              MOVS     r0,#1
0000de  f7fffffe          BL       SFR_DELAY
;;;302    	rDDRSDRC_MR 	= 0x4;
0000e2  2004              MOVS     r0,#4
0000e4  6020              STR      r0,[r4,#0]
;;;303    	rDDRSD_BASE0 	= 0x0;
0000e6  6035              STR      r5,[r6,#0]
;;;304    	SFR_DELAY(1);
0000e8  2001              MOVS     r0,#1
0000ea  f7fffffe          BL       SFR_DELAY
;;;305    	rDDRSDRC_MR 	= 0x4;
0000ee  2004              MOVS     r0,#4
0000f0  6020              STR      r0,[r4,#0]
;;;306    	rDDRSD_BASE0 	= 0x0;
0000f2  6035              STR      r5,[r6,#0]
;;;307    	SFR_DELAY(1);
0000f4  2001              MOVS     r0,#1
0000f6  f7fffffe          BL       SFR_DELAY
;;;308    	i = rDDRSDRC_CR; 
0000fa  68a0              LDR      r0,[r4,#8]
;;;309    	i &= 0xFFFFFF7F;
0000fc  2180              MOVS     r1,#0x80
0000fe  4388              BICS     r0,r0,r1
;;;310    	rDDRSDRC_CR 	= i;
000100  60a0              STR      r0,[r4,#8]
;;;311    	rDDRSDRC_MR 	= 0x3;
000102  2003              MOVS     r0,#3
000104  6020              STR      r0,[r4,#0]
;;;312    	rDDRSD_BASE0 	= 0x0;
000106  6035              STR      r5,[r6,#0]
;;;313    	SFR_DELAY(1);
000108  2001              MOVS     r0,#1
00010a  f7fffffe          BL       SFR_DELAY
;;;314    	i = rDDRSDRC_CR; 
00010e  68a0              LDR      r0,[r4,#8]
;;;315    	i |= (0x07 << 12);
000110  1431              ASRS     r1,r6,#16
000112  4308              ORRS     r0,r0,r1
;;;316    	rDDRSDRC_CR 	= i;
000114  60a0              STR      r0,[r4,#8]
;;;317    	rDDRSDRC_MR		= 0x5;
000116  6027              STR      r7,[r4,#0]
;;;318    	rDDRSD_BASE1 	= 0x0;
000118  48a6              LDR      r0,|L1.948|
00011a  6005              STR      r5,[r0,#0]
;;;319    	SFR_DELAY(1);
00011c  2001              MOVS     r0,#1
00011e  f7fffffe          BL       SFR_DELAY
;;;320    	i = rDDRSDRC_CR; 
000122  68a0              LDR      r0,[r4,#8]
;;;321    	i &= 0xFFFF8FFF;
000124  1431              ASRS     r1,r6,#16
000126  4388              BICS     r0,r0,r1
;;;322    	rDDRSDRC_CR 	= i;
000128  60a0              STR      r0,[r4,#8]
;;;323    	rDDRSDRC_MR 	= 0x5;
00012a  6027              STR      r7,[r4,#0]
;;;324    	rDDRSD_BASE3 	= 0x0;
00012c  48a0              LDR      r0,|L1.944|
00012e  6005              STR      r5,[r0,#0]
;;;325    	SFR_DELAY(1);
000130  2001              MOVS     r0,#1
000132  f7fffffe          BL       SFR_DELAY
;;;326    	rDDRSDRC_MR 	= 0x0;
000136  6025              STR      r5,[r4,#0]
;;;327    	rDDRSD_BASE0 	= 0x0;
000138  6035              STR      r5,[r6,#0]
;;;328    	SFR_DELAY(1);
00013a  2001              MOVS     r0,#1
00013c  f7fffffe          BL       SFR_DELAY
;;;329    	
;;;330    	rDDRSDRC_RTR 	= 0x00000411;
000140  489d              LDR      r0,|L1.952|
000142  6060              STR      r0,[r4,#4]
;;;331    	rDDRSDRC_HS 	= 0x04;
000144  2004              MOVS     r0,#4
000146  62e0              STR      r0,[r4,#0x2c]
;;;332    	
;;;333    	SFR_DELAY(1);
000148  2001              MOVS     r0,#1
00014a  f7fffffe          BL       SFR_DELAY
;;;334    }
00014e  bdf8              POP      {r3-r7,pc}
;;;335    
                          ENDP

                  InitHW_GPIO PROC
;;;170    
;;;171    static void InitHW_GPIO(void)
000150  b510              PUSH     {r4,lr}
;;;172    {
;;;173    	rPIOA_PER	= 0x780003C0;
000152  489a              LDR      r0,|L1.956|
000154  499a              LDR      r1,|L1.960|
000156  6008              STR      r0,[r1,#0]
;;;174    	rPIOA_PDR	= 0x87FFFC3F;
000158  4b9a              LDR      r3,|L1.964|
00015a  4899              LDR      r0,|L1.960|
00015c  6043              STR      r3,[r0,#4]
;;;175    	rPIOA_OER	= 0x20000000;
00015e  499a              LDR      r1,|L1.968|
000160  6101              STR      r1,[r0,#0x10]
;;;176    	rPIOA_ODR	= 0x580003C0;
000162  489a              LDR      r0,|L1.972|
000164  4a96              LDR      r2,|L1.960|
000166  6150              STR      r0,[r2,#0x14]
;;;177    	rPIOA_IFER	= 0x0;
000168  2000              MOVS     r0,#0
00016a  6210              STR      r0,[r2,#0x20]
;;;178    	rPIOA_IFDR	= 0x0;
00016c  6250              STR      r0,[r2,#0x24]
;;;179    	rPIOA_SODR	= 0x0;
00016e  6310              STR      r0,[r2,#0x30]
;;;180    	rPIOA_CODR	= 0x20000000;
000170  6351              STR      r1,[r2,#0x34]
;;;181    	rPIOA_IER	= 0x0;
000172  4a97              LDR      r2,|L1.976|
000174  6010              STR      r0,[r2,#0]
;;;182    	rPIOA_IDR	= 0xFFFFFFFF;
000176  497e              LDR      r1,|L1.880|
000178  6051              STR      r1,[r2,#4]
;;;183    	rPIOA_IMR	= 0x0;
00017a  6090              STR      r0,[r2,#8]
;;;184    	rPIOA_MDER	= 0x0;
00017c  6110              STR      r0,[r2,#0x10]
;;;185    	rPIOA_MDDR	= 0xFFFFFFFF;
00017e  6151              STR      r1,[r2,#0x14]
;;;186    	rPIOA_PUDR	= 0xFFFFFFFF;
000180  6211              STR      r1,[r2,#0x20]
;;;187    	rPIOA_PUER	= 0x583003C0;
000182  4c94              LDR      r4,|L1.980|
000184  6254              STR      r4,[r2,#0x24]
;;;188    	rPIOA_ASR	= 0x87FFFC3F;
000186  6313              STR      r3,[r2,#0x30]
;;;189    	rPIOA_BSR	= 0x0;
000188  6350              STR      r0,[r2,#0x34]
;;;190    	
;;;191    	rPIOB_PER	= 0xFC0C0;
00018a  4b93              LDR      r3,|L1.984|
00018c  4a93              LDR      r2,|L1.988|
00018e  6013              STR      r3,[r2,#0]
;;;192    	rPIOB_PDR	= 0xFFF03F3F;
000190  4b93              LDR      r3,|L1.992|
000192  6053              STR      r3,[r2,#4]
;;;193    	rPIOB_OER	= 0xB8000;
000194  4b93              LDR      r3,|L1.996|
000196  6113              STR      r3,[r2,#0x10]
;;;194    	
;;;195    	//rPIOB_PER	= 0xE40C0;
;;;196    	//rPIOB_PDR	= 0xFFF1BF3F;
;;;197    	//rPIOB_OER	= 0xA0000;
;;;198    	rPIOB_ODR	= 0x440C0;
000198  4b93              LDR      r3,|L1.1000|
00019a  6153              STR      r3,[r2,#0x14]
;;;199    	rPIOB_IFER	= 0x0;
00019c  6210              STR      r0,[r2,#0x20]
;;;200    	rPIOB_IFDR	= 0x0;
00019e  6250              STR      r0,[r2,#0x24]
;;;201    	rPIOB_SODR	= 0x80000;
0001a0  4b92              LDR      r3,|L1.1004|
0001a2  6313              STR      r3,[r2,#0x30]
;;;202    	rPIOB_CODR	= 0x20000;
0001a4  4b92              LDR      r3,|L1.1008|
0001a6  6353              STR      r3,[r2,#0x34]
;;;203    	rPIOB_IER	= 0x0; 			// 0x44000;
0001a8  4a92              LDR      r2,|L1.1012|
0001aa  6010              STR      r0,[r2,#0]
;;;204    	rPIOB_IDR	= 0xFFFFFFFF;	// 0xFFFBBFFF;
0001ac  6051              STR      r1,[r2,#4]
;;;205    	rPIOB_IMR	= 0x0;
0001ae  6090              STR      r0,[r2,#8]
;;;206    	rPIOB_MDER	= 0x0;
0001b0  6110              STR      r0,[r2,#0x10]
;;;207    	rPIOB_MDDR	= 0xFFFFFFFF;
0001b2  6151              STR      r1,[r2,#0x14]
;;;208    	rPIOB_PUDR	= 0xFFFFFFFF;
0001b4  6211              STR      r1,[r2,#0x20]
;;;209    	rPIOB_PUER	= 0xFFFC7FFF;
0001b6  4b90              LDR      r3,|L1.1016|
0001b8  6253              STR      r3,[r2,#0x24]
;;;210    	rPIOB_ASR	= 0xFFF1B03F;
0001ba  4b90              LDR      r3,|L1.1020|
0001bc  6313              STR      r3,[r2,#0x30]
;;;211    	rPIOB_BSR	= 0xF00;
0001be  4b90              LDR      r3,|L1.1024|
0001c0  6353              STR      r3,[r2,#0x34]
;;;212    	rPIOC_PER	= 0x1F83;
0001c2  4b90              LDR      r3,|L1.1028|
0001c4  4a90              LDR      r2,|L1.1032|
0001c6  6013              STR      r3,[r2,#0]
;;;213    	rPIOC_PDR	= 0xFFFFE07C;
0001c8  4c90              LDR      r4,|L1.1036|
0001ca  6054              STR      r4,[r2,#4]
;;;214    	rPIOC_OER	= 0x0;
0001cc  6110              STR      r0,[r2,#0x10]
;;;215    	rPIOC_ODR	= 0x1F83;
0001ce  6153              STR      r3,[r2,#0x14]
;;;216    	rPIOC_IFER	= 0x0;
0001d0  6210              STR      r0,[r2,#0x20]
;;;217    	rPIOC_IFDR	= 0x1F83;
0001d2  6253              STR      r3,[r2,#0x24]
;;;218    	rPIOC_SODR	= 0x0;
0001d4  6310              STR      r0,[r2,#0x30]
;;;219    	rPIOC_CODR	= 0x0;
0001d6  6350              STR      r0,[r2,#0x34]
;;;220    	rPIOC_IER	= 0x0;
0001d8  4a8d              LDR      r2,|L1.1040|
0001da  6010              STR      r0,[r2,#0]
;;;221    	rPIOC_IDR	= 0xFFFFFFFF;
0001dc  6051              STR      r1,[r2,#4]
;;;222    	rPIOC_IMR	= 0x0;
0001de  6090              STR      r0,[r2,#8]
;;;223    	rPIOC_MDER	= 0x0;
0001e0  6110              STR      r0,[r2,#0x10]
;;;224    	rPIOC_MDDR	= 0xFFFFFFFF;
0001e2  6151              STR      r1,[r2,#0x14]
;;;225    	rPIOC_PUDR	= 0x0;
0001e4  6210              STR      r0,[r2,#0x20]
;;;226    	rPIOC_PUER	= 0xFFFFFFFF;
0001e6  6251              STR      r1,[r2,#0x24]
;;;227    	rPIOC_ASR	= 0xFFFFE07C;
0001e8  6314              STR      r4,[r2,#0x30]
;;;228    	rPIOC_BSR	= 0x0;
0001ea  6350              STR      r0,[r2,#0x34]
;;;229    	rPIOD_PER	= 0x180FEC3E;
0001ec  4b89              LDR      r3,|L1.1044|
0001ee  4a8a              LDR      r2,|L1.1048|
0001f0  6013              STR      r3,[r2,#0]
;;;230    	rPIOD_PDR	= 0xE7F013C1;
0001f2  4b8a              LDR      r3,|L1.1052|
0001f4  6053              STR      r3,[r2,#4]
;;;231    	rPIOD_OER	= 0x8000004;
0001f6  4b8a              LDR      r3,|L1.1056|
0001f8  6113              STR      r3,[r2,#0x10]
;;;232    	rPIOD_ODR	= 0x100FEC3A;
0001fa  4b8a              LDR      r3,|L1.1060|
0001fc  6153              STR      r3,[r2,#0x14]
;;;233    	rPIOD_IFER	= 0x30000;
0001fe  4b8a              LDR      r3,|L1.1064|
000200  6213              STR      r3,[r2,#0x20]
;;;234    	rPIOD_IFDR	= 0x1000EC38;
000202  4b8a              LDR      r3,|L1.1068|
000204  6253              STR      r3,[r2,#0x24]
;;;235    	rPIOD_SODR	= 0x4;
000206  2304              MOVS     r3,#4
000208  6313              STR      r3,[r2,#0x30]
;;;236    	rPIOD_CODR	= 0x8000000;
00020a  4b89              LDR      r3,|L1.1072|
00020c  6353              STR      r3,[r2,#0x34]
;;;237    	rPIOD_IER	= 0x0; 			// 0x100EEC12;
00020e  4a89              LDR      r2,|L1.1076|
000210  6010              STR      r0,[r2,#0]
;;;238    	rPIOD_IDR	= 0xFFFFFFFF;	// 0xEFF113ED;
000212  6051              STR      r1,[r2,#4]
;;;239    	rPIOD_IMR	= 0x0;
000214  6090              STR      r0,[r2,#8]
;;;240    	rPIOD_MDER	= 0x0;
000216  6110              STR      r0,[r2,#0x10]
;;;241    	rPIOD_MDDR	= 0xFFFFFFFF;
000218  6151              STR      r1,[r2,#0x14]
;;;242    	rPIOD_PUDR	= 0xFFFFFFFF;
00021a  6211              STR      r1,[r2,#0x20]
;;;243    	rPIOD_PUER	= 0xF0F3026A;
00021c  4b86              LDR      r3,|L1.1080|
00021e  6253              STR      r3,[r2,#0x24]
;;;244    	rPIOD_ASR	= 0xE0F003C0;
000220  4b86              LDR      r3,|L1.1084|
000222  6313              STR      r3,[r2,#0x30]
;;;245    	rPIOD_BSR	= 0x7001001;
000224  4b86              LDR      r3,|L1.1088|
000226  6353              STR      r3,[r2,#0x34]
;;;246    	rPIOE_PER	= 0x6;
000228  4a86              LDR      r2,|L1.1092|
00022a  2306              MOVS     r3,#6
00022c  6013              STR      r3,[r2,#0]
;;;247    	rPIOE_PDR	= 0xFFFFFFF9;
00022e  4c86              LDR      r4,|L1.1096|
000230  6054              STR      r4,[r2,#4]
;;;248    	rPIOE_OER	= 0x0;
000232  6110              STR      r0,[r2,#0x10]
;;;249    	rPIOE_ODR	= 0x6;
000234  6153              STR      r3,[r2,#0x14]
;;;250    	rPIOE_IFER	= 0x0;
000236  6210              STR      r0,[r2,#0x20]
;;;251    	rPIOE_IFDR	= 0x6;
000238  6253              STR      r3,[r2,#0x24]
;;;252    	rPIOE_SODR	= 0x0;
00023a  6310              STR      r0,[r2,#0x30]
;;;253    	rPIOE_CODR	= 0x0;
00023c  6350              STR      r0,[r2,#0x34]
;;;254    	rPIOE_IER	= 0x0; 			// 0x6;
00023e  4a83              LDR      r2,|L1.1100|
000240  6010              STR      r0,[r2,#0]
;;;255    	rPIOE_IDR	= 0xFFFFFFFF;	// 0xFFFFFFF9;
000242  6051              STR      r1,[r2,#4]
;;;256    	rPIOE_IMR	= 0x0;
000244  6090              STR      r0,[r2,#8]
;;;257    	rPIOE_MDER	= 0x0;
000246  6110              STR      r0,[r2,#0x10]
;;;258    	rPIOE_MDDR	= 0xFFFFFFFF;
000248  6151              STR      r1,[r2,#0x14]
;;;259    	rPIOE_PUDR	= 0xFFFFFFFF;
00024a  6211              STR      r1,[r2,#0x20]
;;;260    	rPIOE_PUER	= 0x0;
00024c  6250              STR      r0,[r2,#0x24]
;;;261    	rPIOE_ASR	= 0x7FFFFFF8;
00024e  4880              LDR      r0,|L1.1104|
000250  6310              STR      r0,[r2,#0x30]
;;;262    	rPIOE_BSR	= 0x80000001;
000252  4880              LDR      r0,|L1.1108|
000254  6350              STR      r0,[r2,#0x34]
;;;263    }
000256  bd10              POP      {r4,pc}
;;;264    
                          ENDP

                  defaultSpuriousHandler PROC
;;;357    //------------------------------------------------------------------------------
;;;358    void defaultSpuriousHandler(void)
000258  4770              BX       lr
;;;359    {
;;;360       // while (1);
;;;361    }
;;;362    
                          ENDP

                  defaultIrqHandler PROC
                  |L1.602|
;;;373    //------------------------------------------------------------------------------
;;;374    void defaultIrqHandler(void)
00025a  e7fe              B        |L1.602|
;;;375    {
;;;376        while (1);
;;;377    }
                          ENDP

                  defaultFiqHandler PROC
                  |L1.604|
;;;365    //------------------------------------------------------------------------------
;;;366    void defaultFiqHandler(void)
00025c  e7fe              B        |L1.604|
;;;367    {
;;;368        while (1);
;;;369    }
;;;370    
                          ENDP

                  InitHW_AIC PROC
;;;106    
;;;107    static void InitHW_AIC(void)
00025e  b510              PUSH     {r4,lr}
;;;108    {
;;;109    	U32 i = 0;
;;;110    	
;;;111    	rAIC_IDCR = 0xFFFFFFFF;
000260  4843              LDR      r0,|L1.880|
000262  497d              LDR      r1,|L1.1112|
000264  6248              STR      r0,[r1,#0x24]
;;;112        rAIC_SVR(0) = (U32) defaultFiqHandler;
000266  487d              LDR      r0,|L1.1116|
000268  4a7d              LDR      r2,|L1.1120|
00026a  6010              STR      r0,[r2,#0]
;;;113        for (i = 1; i < 31; i++) rAIC_SVR(i) = (U32) defaultIrqHandler;
00026c  2001              MOVS     r0,#1
00026e  4b7d              LDR      r3,|L1.1124|
000270  4a7d              LDR      r2,|L1.1128|
                  |L1.626|
000272  0084              LSLS     r4,r0,#2
000274  1aa4              SUBS     r4,r4,r2
000276  6023              STR      r3,[r4,#0]
000278  1c40              ADDS     r0,r0,#1
00027a  281f              CMP      r0,#0x1f
00027c  d3f9              BCC      |L1.626|
;;;114        rAIC_SPU = (U32) defaultSpuriousHandler;
00027e  487b              LDR      r0,|L1.1132|
000280  6348              STR      r0,[r1,#0x34]
;;;115        for (i = 0; i < 8 ; i++) rAIC_EOICR = 0;
000282  2000              MOVS     r0,#0
000284  2200              MOVS     r2,#0                 ;109
                  |L1.646|
000286  630a              STR      r2,[r1,#0x30]
000288  1c40              ADDS     r0,r0,#1
00028a  2808              CMP      r0,#8
00028c  d3fb              BCC      |L1.646|
;;;116    }
00028e  bd10              POP      {r4,pc}
;;;117    
                          ENDP

                  InitHW_Clock PROC
;;;57     
;;;58     static void InitHW_Clock(void)
000290  b570              PUSH     {r4-r6,lr}
;;;59     {
;;;60     	rCKGR_MOR		= 0x00008001;	// Try to Enable the 12 MHz Crystal Oscillator
000292  4877              LDR      r0,|L1.1136|
000294  4d77              LDR      r5,|L1.1140|
000296  6228              STR      r0,[r5,#0x20]
;;;61     
;;;62     	while((rPMC_SR & 0x1) != 0x1);	// Let the 12 MHz be stable.
000298  4c77              LDR      r4,|L1.1144|
                  |L1.666|
00029a  6aa0              LDR      r0,[r4,#0x28]
00029c  07c0              LSLS     r0,r0,#31
00029e  d0fc              BEQ      |L1.666|
;;;63     	
;;;64     	rPMC_MCKR		= 0x00001301;	// Switch the System Clock to 12 MHz
0002a0  4876              LDR      r0,|L1.1148|
0002a2  6328              STR      r0,[r5,#0x30]
;;;65     
;;;66     	/* DIV = 3, MUL = 199 (MAIN_CLOCK = 12MHz, APLL = 800MHz, SYS_CLK = 400MHz) */
;;;67     	
;;;68     	rPMC_PLLICPR	= 0x0;			// PLL CP Current setting
0002a4  4976              LDR      r1,|L1.1152|
0002a6  2000              MOVS     r0,#0
0002a8  6008              STR      r0,[r1,#0]
;;;69     	rCKGR_PLLAR 	= 0x20C73F03;
0002aa  4876              LDR      r0,|L1.1156|
0002ac  62a8              STR      r0,[r5,#0x28]
                  |L1.686|
;;;70     	
;;;71     	while((rPMC_SR & 0x3) != 0x3);
0002ae  6aa0              LDR      r0,[r4,#0x28]
0002b0  43c0              MVNS     r0,r0
0002b2  0780              LSLS     r0,r0,#30
0002b4  d1fb              BNE      |L1.686|
;;;72     	
;;;73     	/* MCLK = 133MHz, DDR_CLK = 133MHz, DDR_Rate = 266MHz */
;;;74     	
;;;75     	rPMC_MCKR		= 0x00001302;
0002b6  4874              LDR      r0,|L1.1160|
0002b8  6328              STR      r0,[r5,#0x30]
                  |L1.698|
;;;76     
;;;77     	while((rPMC_SR & 0xF) != 0xB);
0002ba  6aa0              LDR      r0,[r4,#0x28]
0002bc  0700              LSLS     r0,r0,#28
0002be  0f00              LSRS     r0,r0,#28
0002c0  280b              CMP      r0,#0xb
0002c2  d1fa              BNE      |L1.698|
;;;78     
;;;79     	rCKGR_UCKR		= 0xF1F10000;		// Enable UPLL
0002c4  4871              LDR      r0,|L1.1164|
0002c6  61e8              STR      r0,[r5,#0x1c]
                  |L1.712|
;;;80     	while(((rPMC_SR>>6) & 0x1) != 0x1);
0002c8  6aa0              LDR      r0,[r4,#0x28]
0002ca  0640              LSLS     r0,r0,#25
0002cc  d5fc              BPL      |L1.712|
;;;81     
;;;82     	if(rSCKCR != 0x0000000A)	// Enable the 32k Quartz Crystal
0002ce  4e6c              LDR      r6,|L1.1152|
0002d0  36c0              ADDS     r6,r6,#0xc0
0002d2  6930              LDR      r0,[r6,#0x10]
0002d4  280a              CMP      r0,#0xa
0002d6  d00e              BEQ      |L1.758|
;;;83     	{
;;;84     		rSCKCR		= 0x00000003;	
0002d8  2003              MOVS     r0,#3
0002da  6130              STR      r0,[r6,#0x10]
;;;85     		SFR_DELAY(5);	
0002dc  2005              MOVS     r0,#5
0002de  f7fffffe          BL       SFR_DELAY
;;;86     		rSCKCR		= 0x0000000B;
0002e2  200b              MOVS     r0,#0xb
0002e4  6130              STR      r0,[r6,#0x10]
;;;87     		SFR_DELAY(5);
0002e6  2005              MOVS     r0,#5
0002e8  f7fffffe          BL       SFR_DELAY
;;;88     		rSCKCR		= 0x0000000A; 
0002ec  200a              MOVS     r0,#0xa
0002ee  6130              STR      r0,[r6,#0x10]
;;;89     		SFR_DELAY(5);
0002f0  2005              MOVS     r0,#5
0002f2  f7fffffe          BL       SFR_DELAY
                  |L1.758|
;;;90     	}
;;;91     
;;;92     	rPMC_SCER		= 0x344;
0002f6  4866              LDR      r0,|L1.1168|
0002f8  6028              STR      r0,[r5,#0]
;;;93     	
;;;94     //	EFECD17C 0824000C
;;;95     	
;;;96     //	rPMC_PCDR		= 0xEFECD97C;
;;;97     //	rPMC_PCER		= 0xEFECD97C;
;;;98     	
;;;99     	rPMC_PCER		= 0x0028503C;
0002fa  4866              LDR      r0,|L1.1172|
0002fc  6128              STR      r0,[r5,#0x10]
;;;100    	rPMC_PCDR		= 0xFFD7AFC0;
0002fe  4866              LDR      r0,|L1.1176|
000300  6168              STR      r0,[r5,#0x14]
;;;101    	
;;;102    	rPMC_PCK0		= 0x106;	// Set the PCK0 = 66.66 MHz
000302  4866              LDR      r0,|L1.1180|
000304  6020              STR      r0,[r4,#0]
;;;103    	rPMC_PCK1		= 0x106;	// Set the PCK1 = 66.66 MHz
000306  6060              STR      r0,[r4,#4]
                  |L1.776|
;;;104    	while(((rPMC_SR>>8) & 0x3) != 0x3);
000308  6aa0              LDR      r0,[r4,#0x28]
00030a  0a00              LSRS     r0,r0,#8
00030c  43c0              MVNS     r0,r0
00030e  0780              LSLS     r0,r0,#30
000310  d1fa              BNE      |L1.776|
;;;105    }
000312  bd70              POP      {r4-r6,pc}
;;;106    
                          ENDP

                  InitHW_Basic PROC
;;;50     
;;;51     static void InitHW_Basic(void)
000314  4862              LDR      r0,|L1.1184|
;;;52     {
;;;53     	rWDT_SR			= 0x3EFF8FFF;	// Disable the dame watch dog timer
000316  4963              LDR      r1,|L1.1188|
000318  6048              STR      r0,[r1,#4]
;;;54     	rSHDW_MR		= 0x00000001;	// Enable Wake-up button
00031a  4863              LDR      r0,|L1.1192|
00031c  2101              MOVS     r1,#1
00031e  6141              STR      r1,[r0,#0x14]
;;;55     	rSYS_RSTC		= 0xA5000001;	// Enable external reset
000320  4962              LDR      r1,|L1.1196|
000322  6081              STR      r1,[r0,#8]
;;;56     }
000324  4770              BX       lr
;;;57     
                          ENDP

                  InitHW PROC
;;;29     
;;;30     void InitHW(void)
000326  b510              PUSH     {r4,lr}
;;;31     {
;;;32     	InitHW_Basic();
000328  f7fffffe          BL       InitHW_Basic
;;;33     	InitHW_Clock();
00032c  f7fffffe          BL       InitHW_Clock
;;;34     	InitHW_AIC();
000330  f7fffffe          BL       InitHW_AIC
;;;35     	
;;;36     	rMATRIX_MRCR = (0x1 << 0) | (0x1 << 1);
000334  495e              LDR      r1,|L1.1200|
000336  2003              MOVS     r0,#3
000338  6008              STR      r0,[r1,#0]
;;;37     	
;;;38     	rRTT_MR &= ~((0x1 << 16) | (0x1 << 17));
00033a  485b              LDR      r0,|L1.1192|
00033c  6a01              LDR      r1,[r0,#0x20]
00033e  4a3a              LDR      r2,|L1.1064|
000340  4391              BICS     r1,r1,r2
000342  6201              STR      r1,[r0,#0x20]
;;;39     	rPIT_MR &= ~((0x1 << 24) | (0x1 << 25));
000344  6b01              LDR      r1,[r0,#0x30]
000346  0212              LSLS     r2,r2,#8
000348  4391              BICS     r1,r1,r2
00034a  6301              STR      r1,[r0,#0x30]
;;;40     	
;;;41     	InitHW_GPIO();
00034c  f7fffffe          BL       InitHW_GPIO
;;;42     	InitHW_DDRAM();
000350  f7fffffe          BL       InitHW_DDRAM
;;;43     	InitHW_RTC();
000354  f7fffffe          BL       InitHW_RTC
;;;44     	InitHW_EMIF();
000358  f7fffffe          BL       InitHW_EMIF
;;;45     	InitHW_LED();
00035c  f7fffffe          BL       InitHW_LED
;;;46     	InitHW_DBGU();
000360  f7fffffe          BL       InitHW_DBGU
;;;47     	
;;;48     	rPIOA_SODR = (1<<29);
000364  4818              LDR      r0,|L1.968|
000366  4916              LDR      r1,|L1.960|
000368  6308              STR      r0,[r1,#0x30]
;;;49     }
00036a  bd10              POP      {r4,pc}
;;;50     
                          ENDP

                  |L1.876|
                          DCD      0xffffee00
                  |L1.880|
                          DCD      0xffffffff
                  |L1.884|
                          DCD      0x00000800
                  |L1.888|
                          DCD      0x00000202
                  |L1.892|
                          DCD      0xffffef00
                  |L1.896|
                          DCD      0x0a820101
                  |L1.900|
                          DCD      0xfffb8000
                  |L1.904|
                          DCD      0xfffb8200
                  |L1.908|
                          DCD      0x000001f4
                  |L1.912|
                          DCD      0x000003e8
                  |L1.916|
                          DCD      0xfffb8240
                  |L1.920|
                          DCD      0xffffe600
                  |L1.924|
                          DCD      0x21128226
                  |L1.928|
                          DCD      0x02c8100e
                  |L1.932|
                          DCD      0x00002072
                  |L1.936|
                          DCD      0x70000000
                  |L1.940|
                          DCD      0x74000000
                  |L1.944|
                          DCD      0x76000000
                  |L1.948|
                          DCD      0x72000000
                  |L1.952|
                          DCD      0x00000411
                  |L1.956|
                          DCD      0x780003c0
                  |L1.960|
                          DCD      0xfffff200
                  |L1.964|
                          DCD      0x87fffc3f
                  |L1.968|
                          DCD      0x20000000
                  |L1.972|
                          DCD      0x580003c0
                  |L1.976|
                          DCD      0xfffff240
                  |L1.980|
                          DCD      0x583003c0
                  |L1.984|
                          DCD      0x000fc0c0
                  |L1.988|
                          DCD      0xfffff400
                  |L1.992|
                          DCD      0xfff03f3f
                  |L1.996|
                          DCD      0x000b8000
                  |L1.1000|
                          DCD      0x000440c0
                  |L1.1004|
                          DCD      0x00080000
                  |L1.1008|
                          DCD      0x00020000
                  |L1.1012|
                          DCD      0xfffff440
                  |L1.1016|
                          DCD      0xfffc7fff
                  |L1.1020|
                          DCD      0xfff1b03f
                  |L1.1024|
                          DCD      0x00000f00
                  |L1.1028|
                          DCD      0x00001f83
                  |L1.1032|
                          DCD      0xfffff600
                  |L1.1036|
                          DCD      0xffffe07c
                  |L1.1040|
                          DCD      0xfffff640
                  |L1.1044|
                          DCD      0x180fec3e
                  |L1.1048|
                          DCD      0xfffff800
                  |L1.1052|
                          DCD      0xe7f013c1
                  |L1.1056|
                          DCD      0x08000004
                  |L1.1060|
                          DCD      0x100fec3a
                  |L1.1064|
                          DCD      0x00030000
                  |L1.1068|
                          DCD      0x1000ec38
                  |L1.1072|
                          DCD      0x08000000
                  |L1.1076|
                          DCD      0xfffff840
                  |L1.1080|
                          DCD      0xf0f3026a
                  |L1.1084|
                          DCD      0xe0f003c0
                  |L1.1088|
                          DCD      0x07001001
                  |L1.1092|
                          DCD      0xfffffa00
                  |L1.1096|
                          DCD      0xfffffff9
                  |L1.1100|
                          DCD      0xfffffa40
                  |L1.1104|
                          DCD      0x7ffffff8
                  |L1.1108|
                          DCD      0x80000001
                  |L1.1112|
                          DCD      0xfffff100
                  |L1.1116|
                          DCD      defaultFiqHandler
                  |L1.1120|
                          DCD      0xfffff080
                  |L1.1124|
                          DCD      defaultIrqHandler
                  |L1.1128|
                          DCD      0x00000f80
                  |L1.1132|
                          DCD      defaultSpuriousHandler
                  |L1.1136|
                          DCD      0x00008001
                  |L1.1140|
                          DCD      0xfffffc00
                  |L1.1144|
                          DCD      0xfffffc40
                  |L1.1148|
                          DCD      0x00001301
                  |L1.1152|
                          DCD      0xfffffc80
                  |L1.1156|
                          DCD      0x20c73f03
                  |L1.1160|
                          DCD      0x00001302
                  |L1.1164|
                          DCD      0xf1f10000
                  |L1.1168|
                          DCD      0x00000344
                  |L1.1172|
                          DCD      0x0028503c
                  |L1.1176|
                          DCD      0xffd7afc0
                  |L1.1180|
                          DCD      0x00000106
                  |L1.1184|
                          DCD      0x3eff8fff
                  |L1.1188|
                          DCD      0xfffffd40
                  |L1.1192|
                          DCD      0xfffffd00
                  |L1.1196|
                          DCD      0xa5000001
                  |L1.1200|
                          DCD      0xffffeb00

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                          ARM
                  SFR_DELAY PROC
;;;155    
;;;156    static void InitHW_DBGU(void)
000000  e3500000          CMP      r0,#0
;;;157    {
;;;158    	rDBGU_CR = (0x1 << 7) + (0x1 << 5) + (0x1 << 3) + (0x1 << 2);
000004  0a000008          BEQ      |L2.44|
;;;159    	rDBGU_IDR = 0xFFFFFFFF;
000008  e59f2020          LDR      r2,|L2.48|
                  |L2.12|
;;;160    	rDBGU_BRGR = 0x48; // (5 << 16) + 144; (0x48)
00000c  e3a01000          MOV      r1,#0
                  |L2.16|
;;;161    	rDBGU_MR = (0x0 << 14) + (0x4 << 9);
000010  e1a00000          MOV      r0,r0
;;;162    	rDBGU_PTCR = (0x1 << 1) | (0x1 << 9);
000014  e2811001          ADD      r1,r1,#1
;;;163    	rDBGU_CR = (0x1 << 6) + (0x1 << 4);
000018  e1510002          CMP      r1,r2
;;;164    }
00001c  3afffffb          BCC      |L2.16|
000020  e2400001          SUB      r0,r0,#1
000024  e3500000          CMP      r0,#0
000028  1afffff7          BNE      |L2.12|
                  |L2.44|
00002c  e12fff1e          BX       lr
;;;165    
                          ENDP

                  |L2.48|
                          DCD      0x00001c84




ARM Macro Assembler    Page 1 


    1 00000000         ; ------------------------------------------------------
                       ------------------------
    2 00000000         ;          Definitions
    3 00000000         ; ------------------------------------------------------
                       ------------------------
    4 00000000         
    5 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
    6 00000000         
    7 00000000 00000010 
                       ARM_MODE_USR
                               EQU              0x10
    8 00000000 00000011 
                       ARM_MODE_FIQ
                               EQU              0x11
    9 00000000 00000012 
                       ARM_MODE_IRQ
                               EQU              0x12
   10 00000000 00000013 
                       ARM_MODE_SVC
                               EQU              0x13
   11 00000000 00000017 
                       ARM_MODE_ABT
                               EQU              0x17
   12 00000000 0000001B 
                       ARM_MODE_UND
                               EQU              0x1B
   13 00000000 0000001F 
                       ARM_MODE_SYS
                               EQU              0x1F
   14 00000000         
   15 00000000 00000080 
                       I_BIT   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   16 00000000 00000040 
                       F_BIT   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   17 00000000         
   18 00000000 FFFFF000 
                       AT91C_BASE_AIC
                               EQU              0xFFFFF000
   19 00000000 00000100 
                       AIC_IVR EQU              0x100
   20 00000000 00000130 
                       AIC_EOICR
                               EQU              0x130
   21 00000000         
   22 00000000 00000000 
                       UND_Stack_Size
                               EQU              0x00000000
   23 00000000 00000100 
                       SVC_Stack_Size
                               EQU              0x00000100
   24 00000000 00000000 
                       ABT_Stack_Size
                               EQU              0x00000000
   25 00000000 00000000 
                       FIQ_Stack_Size
                               EQU              0x00000000



ARM Macro Assembler    Page 2 


   26 00000000 00000080 
                       IRQ_Stack_Size
                               EQU              0x00000080
   27 00000000 00000400 
                       USR_Stack_Size
                               EQU              0x00000400
   28 00000000         
   29 00000000                 PRESERVE8
   30 00000000         
   31 00000000         ; ------------------------------------------------------
                       ------------------------
   32 00000000         ;    Area Definition and Entry Point
   33 00000000         ;    Startup Code must be linked first at Address at whi
                       ch it expects to run.
   34 00000000         ; ------------------------------------------------------
                       ------------------------
   35 00000000         
   36 00000000                 AREA             VECTOR, CODE
   37 00000000                 ARM
   38 00000000         
   39 00000000         Vectors                              ; Exception Vectors
                                                            
   40 00000000 EAFFFFFE        b                HandlerReset ; Handler for Star
                                                            tup
   41 00000004 EA000005        b                HandlerUndef ; Handler for Unde
                                                            fined mode
   42 00000008 EA000005        b                HandlerSWI  ; Handler for SWI i
                                                            nterrupt
   43 0000000C EA000005        b                HandlerPabort ; Handler for Pre
                                                            fetch Abort
   44 00000010 EA000005        b                HandlerDabort ; Handler for Dat
                                                            a Abort
   45 00000014         ; b  .    ; Handler Reserved
   46 00000014 00007FFF        DCD              0x7FFF      ; Set for SAM9 boot
                                                            strap
   47 00000018 EA000004        b                HandlerIRQ  ; Handler for IRQ i
                                                            nterrupt
   48 0000001C EA000015        b                HandlerFIQ  ; Handler for FIQ i
                                                            nterrupt
   49 00000020         
   50 00000020         ;-------------------------------------------------------
                       -----------------------
   51 00000020         ;
   52 00000020         ;-------------------------------------------------------
                       -----------------------
   53 00000020         HandlerUndef
   54 00000020 EAFFFFFE        b                HandlerUndef
   55 00000024         
   56 00000024         
   57 00000024         ;-------------------------------------------------------
                       -----------------------
   58 00000024         ;
   59 00000024         ;-------------------------------------------------------
                       -----------------------
   60 00000024         HandlerSWI
   61 00000024 EAFFFFFE        b                HandlerSWI
   62 00000028         
   63 00000028         ;-------------------------------------------------------
                       -----------------------



ARM Macro Assembler    Page 3 


   64 00000028         ;
   65 00000028         ;-------------------------------------------------------
                       -----------------------
   66 00000028         HandlerPabort
   67 00000028 EAFFFFFE        b                HandlerPabort
   68 0000002C         
   69 0000002C         ;-------------------------------------------------------
                       -----------------------
   70 0000002C         ;
   71 0000002C         ;-------------------------------------------------------
                       -----------------------
   72 0000002C         HandlerDabort
   73 0000002C EAFFFFFE        b                HandlerDabort
   74 00000030         
   75 00000030         ;-------------------------------------------------------
                       -----------------------
   76 00000030         ; Handles incoming interrupt requests by branching to th
                       e corresponding
   77 00000030         ; handler, as defined in the AIC. Supports interrupt nes
                       ting.
   78 00000030         ;-------------------------------------------------------
                       -----------------------
   79 00000030         HandlerIRQ
   80 00000030         ;  Save interrupt context on the stack to allow nesting 
                       */
   81 00000030 E24EE004        SUB              lr, lr, #4
   82 00000034 E92D4000        STMFD            sp!, {lr}
   83 00000038 E14FE000        MRS              lr, SPSR
   84 0000003C E92D4003        STMFD            sp!, {r0,r1,lr}
   85 00000040         
   86 00000040         ; Write in the IVR to support Protect Mode */
   87 00000040 E59FE034        LDR              lr, =AT91C_BASE_AIC
   88 00000044 E59E0100        LDR              r0, [r14, #AIC_IVR]
   89 00000048 E58EE100        STR              lr, [r14, #AIC_IVR]
   90 0000004C         
   91 0000004C         ; Branch to interrupt handler in Supervisor mode */
   92 0000004C E321F013        MSR              CPSR_c, #ARM_MODE_SVC
   93 00000050 E92D501E        STMFD            sp!, {r1-r4, r12, lr}
   94 00000054 E1A0E00F        MOV              lr, pc
   95 00000058 E12FFF10        BX               r0
   96 0000005C E8BD501E        LDMIA            sp!, {r1-r4, r12, lr}
   97 00000060 E321F092        MSR              CPSR_c, #ARM_MODE_IRQ :OR: I_BI
T
   98 00000064         
   99 00000064         ; Acknowledge interrupt */
  100 00000064 E59FE010        LDR              lr, =AT91C_BASE_AIC
  101 00000068 E58EE130        STR              lr, [r14, #AIC_EOICR]
  102 0000006C         
  103 0000006C         ; Restore interrupt context and branch back to calling c
                       ode
  104 0000006C E8BD4003        LDMIA            sp!, {r0,r1,lr}
  105 00000070 E16FF00E        MSR              SPSR_cxsf, lr
  106 00000074 E8FD8000        LDMIA            sp!, {pc}^
  107 00000078         
  108 00000078         ;-------------------------------------------------------
                       -----------------------
  109 00000078         ;
  110 00000078         ;-------------------------------------------------------
                       -----------------------



ARM Macro Assembler    Page 4 


  111 00000078         HandlerFIQ
  112 00000078 EAFFFFFE        b                HandlerFIQ
  113 0000007C         
  114 0000007C         ;-------------------------------------------------------
                       -----------------------
  115 0000007C         ; After a reset, execution starts here, the mode is ARM,
                        supervisor
  116 0000007C         ; with interrupts disabled.
  117 0000007C         ; Initializes the chip and branches to the main() functi
                       on.
  118 0000007C         ;-------------------------------------------------------
                       -----------------------
  119 0000007C         
  120 0000007C FFFFF000        AREA             STARTUP, CODE
  121 00000000                 ENTRY                        ; Entry point for t
                                                            he application
  122 00000000         
  123 00000000                 EXPORT           HandlerReset
  124 00000000                 IMPORT           |Image$$Fixed_region$$Limit|
  125 00000000                 IMPORT           |Image$$Relocate_region$$Base|
  126 00000000                 IMPORT           |Image$$Relocate_region$$ZI$$Ba
se|
  127 00000000                 IMPORT           |Image$$Relocate_region$$ZI$$Li
mit|
  128 00000000                 IMPORT           |Image$$ARM_LIB_STACK$$Base|
  129 00000000                 IMPORT           |Image$$ARM_LIB_STACK$$ZI$$Limi
t|
  130 00000000         
  131 00000000         ; Perform low-level initialization of the chip using Ini
                       tHW()
  132 00000000                 IMPORT           InitHW
  133 00000000         
  134 00000000         HandlerReset
  135 00000000         
  136 00000000         ; Set pc to actual code location (i.e. not in remap zone
                       )
  137 00000000 E59FF06C        LDR              pc, =JumpStart
  138 00000004         
  139 00000004         JumpStart
  140 00000004         ; Set up temporary stack (Top of the SRAM)
  141 00000004 E59F006C        LDR              r0, = |Image$$ARM_LIB_STACK$$ZI
$$Limit|
  142 00000008 E1A0D000        MOV              sp, r0
  143 0000000C         ; Call Low level init
  144 0000000C E59F0068        LDR              r0, =InitHW
  145 00000010 E1A0E00F        MOV              lr, pc
  146 00000014 E12FFF10        BX               r0
  147 00000018         
  148 00000018         ;Initialize the Relocate_region segment 
  149 00000018 E59F0060        LDR              r0, = |Image$$Fixed_region$$Lim
it|
  150 0000001C E59F1060        LDR              r1, = |Image$$Relocate_region$$
Base|
  151 00000020 E59F3060        LDR              r3, = |Image$$Relocate_region$$
ZI$$Base|
  152 00000024         
  153 00000024 E1500001        CMP              r0, r1
  154 00000028 0A000003        BEQ              %1
  155 0000002C         



ARM Macro Assembler    Page 5 


  156 0000002C         ; Copy init data
  157 0000002C E1510003 
                       0       CMP              r1, r3
  158 00000030 34902004        LDRCC            r2, [r0], #4
  159 00000034 34812004        STRCC            r2, [r1], #4
  160 00000038 3AFFFFFB        BCC              %0
  161 0000003C         
  162 0000003C E59F1048 
                       1       LDR              r1, =|Image$$Relocate_region$$Z
I$$Limit|
  163 00000040 E3A02000        MOV              r2, #0
  164 00000044 E1530001 
                       2       CMP              r3, r1
  165 00000048 34832004        STRCC            r2, [r3], #4
  166 0000004C 3AFFFFFC        BCC              %2
  167 00000050         
  168 00000050         ; Setup Stack for each mode
  169 00000050         
  170 00000050 E59F0020        LDR              R0, = |Image$$ARM_LIB_STACK$$ZI
$$Limit|
  171 00000054         
  172 00000054         ;  Enter IRQ Mode and set its Stack Pointer
  173 00000054 E321F0D2        MSR              CPSR_c, #ARM_MODE_IRQ:OR:I_BIT:
OR:F_BIT
  174 00000058 E1A0D000        MOV              SP, R0
  175 0000005C E24D4080        SUB              R4, SP, #IRQ_Stack_Size
  176 00000060         
  177 00000060         ; Supervisor mode (interrupts enabled) 
  178 00000060 E321F053        MSR              CPSR_c, #ARM_MODE_SVC:OR:F_BIT
  179 00000064 E1A0D004        MOV              SP, R4
  180 00000068         
  181 00000068         ; Enter the C code
  182 00000068         
  183 00000068                 IMPORT           __main
  184 00000068 E59F0020        LDR              R0, =__main
  185 0000006C E12FFF10        BX               R0
  186 00000070         
  187 00000070         JumpLoop
  188 00000070 EAFFFFFE        B                JumpLoop
  189 00000074         
  190 00000074 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000         AREA             bootm_init, CODE
  191 00000000         
  192 00000000                 EXPORT           BootmSet_ParamAddr
  193 00000000                 EXPORT           BootmSet_MachineID
  194 00000000         
  195 00000000         BootmSet_ParamAddr
  196 00000000         ;r0= paddr
  197 00000000 E1A02000        mov              r2, r0
  198 00000004 E12FFF1E        bx               lr
  199 00000008         
  200 00000008         BootmSet_MachineID
  201 00000008         ;r0= mid



ARM Macro Assembler    Page 6 


  202 00000008 E1A01000        mov              r1, r0
  203 0000000C         
  204 0000000C E3A00000        mov              r0, #0
  205 00000010 E3A0C000        mov              ip, #0
  206 00000014 EE0DCF10        mcr              p15, 0, ip, c13, c0, 0
  207 00000018 EE07CF17        mcr              p15, 0, ip, c7, c7, 0
  208 0000001C EE07CF9A        mcr              p15, 0, ip, c7, c10, 4
  209 00000020 EE08CF17        mcr              p15, 0, ip, c8, c7, 0
  210 00000024 EE11CF10        mrc              p15, 0, ip, c1, c0, 0
  211 00000028 E3CCC001        bic              ip, ip, #0x0001
  212 0000002C EE01CF10        mcr              p15, 0, ip, c1, c0, 0
  213 00000030 E12FFF1E        bx               lr
  214 00000034         
  215 00000034                 END
Command Line: --debug --xref --cpu=ARM926EJ-S --apcs=interwork --depend=.\outpu
t\init_boot.d -o.\output\init_boot.o -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
INC\Atmel\SAM9M10 --list=.\output\init_boot.lst init_boot.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HandlerDabort 0000002C

Symbol: HandlerDabort
   Definitions
      At line 72 in file init_boot.s
   Uses
      At line 44 in file init_boot.s
      At line 73 in file init_boot.s

HandlerFIQ 00000078

Symbol: HandlerFIQ
   Definitions
      At line 111 in file init_boot.s
   Uses
      At line 48 in file init_boot.s
      At line 112 in file init_boot.s

HandlerIRQ 00000030

Symbol: HandlerIRQ
   Definitions
      At line 79 in file init_boot.s
   Uses
      At line 47 in file init_boot.s
Comment: HandlerIRQ used once
HandlerPabort 00000028

Symbol: HandlerPabort
   Definitions
      At line 66 in file init_boot.s
   Uses
      At line 43 in file init_boot.s
      At line 67 in file init_boot.s

HandlerSWI 00000024

Symbol: HandlerSWI
   Definitions
      At line 60 in file init_boot.s
   Uses
      At line 42 in file init_boot.s
      At line 61 in file init_boot.s

HandlerUndef 00000020

Symbol: HandlerUndef
   Definitions
      At line 53 in file init_boot.s
   Uses
      At line 41 in file init_boot.s
      At line 54 in file init_boot.s

VECTOR 00000000

Symbol: VECTOR
   Definitions
      At line 36 in file init_boot.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      None
Comment: VECTOR unused
Vectors 00000000

Symbol: Vectors
   Definitions
      At line 39 in file init_boot.s
   Uses
      None
Comment: Vectors unused
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

 0000002C

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 0000003C

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 00000044

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
HandlerReset 00000000

Symbol: HandlerReset
   Definitions
      At line 134 in file init_boot.s
   Uses
      At line 40 in file init_boot.s
      At line 123 in file init_boot.s

JumpLoop 00000070

Symbol: JumpLoop
   Definitions
      At line 187 in file init_boot.s
   Uses
      At line 188 in file init_boot.s
Comment: JumpLoop used once
JumpStart 00000004

Symbol: JumpStart
   Definitions
      At line 139 in file init_boot.s
   Uses
      At line 137 in file init_boot.s
Comment: JumpStart used once
STARTUP 00000000

Symbol: STARTUP
   Definitions
      At line 120 in file init_boot.s
   Uses
      None
Comment: STARTUP unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BootmSet_MachineID 00000008

Symbol: BootmSet_MachineID
   Definitions
      At line 200 in file init_boot.s
   Uses
      At line 193 in file init_boot.s
Comment: BootmSet_MachineID used once
BootmSet_ParamAddr 00000000

Symbol: BootmSet_ParamAddr
   Definitions
      At line 195 in file init_boot.s
   Uses
      At line 192 in file init_boot.s
Comment: BootmSet_ParamAddr used once
bootm_init 00000000

Symbol: bootm_init
   Definitions
      At line 190 in file init_boot.s
   Uses
      None
Comment: bootm_init unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000000

Symbol: ABT_Stack_Size
   Definitions
      At line 24 in file init_boot.s
   Uses
      None
Comment: ABT_Stack_Size unused
AIC_EOICR 00000130

Symbol: AIC_EOICR
   Definitions
      At line 20 in file init_boot.s
   Uses
      At line 101 in file init_boot.s
Comment: AIC_EOICR used once
AIC_IVR 00000100

Symbol: AIC_IVR
   Definitions
      At line 19 in file init_boot.s
   Uses
      At line 88 in file init_boot.s
      At line 89 in file init_boot.s

ARM_MODE_ABT 00000017

Symbol: ARM_MODE_ABT
   Definitions
      At line 11 in file init_boot.s
   Uses
      None
Comment: ARM_MODE_ABT unused
ARM_MODE_FIQ 00000011

Symbol: ARM_MODE_FIQ
   Definitions
      At line 8 in file init_boot.s
   Uses
      None
Comment: ARM_MODE_FIQ unused
ARM_MODE_IRQ 00000012

Symbol: ARM_MODE_IRQ
   Definitions
      At line 9 in file init_boot.s
   Uses
      At line 97 in file init_boot.s
      At line 173 in file init_boot.s

ARM_MODE_SVC 00000013

Symbol: ARM_MODE_SVC
   Definitions
      At line 10 in file init_boot.s
   Uses
      At line 92 in file init_boot.s
      At line 178 in file init_boot.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

ARM_MODE_SYS 0000001F

Symbol: ARM_MODE_SYS
   Definitions
      At line 13 in file init_boot.s
   Uses
      None
Comment: ARM_MODE_SYS unused
ARM_MODE_UND 0000001B

Symbol: ARM_MODE_UND
   Definitions
      At line 12 in file init_boot.s
   Uses
      None
Comment: ARM_MODE_UND unused
ARM_MODE_USR 00000010

Symbol: ARM_MODE_USR
   Definitions
      At line 7 in file init_boot.s
   Uses
      None
Comment: ARM_MODE_USR unused
AT91C_BASE_AIC FFFFF000

Symbol: AT91C_BASE_AIC
   Definitions
      At line 18 in file init_boot.s
   Uses
      At line 87 in file init_boot.s
      At line 100 in file init_boot.s

FIQ_Stack_Size 00000000

Symbol: FIQ_Stack_Size
   Definitions
      At line 25 in file init_boot.s
   Uses
      None
Comment: FIQ_Stack_Size unused
F_BIT 00000040

Symbol: F_BIT
   Definitions
      At line 16 in file init_boot.s
   Uses
      At line 173 in file init_boot.s
      At line 178 in file init_boot.s

IRQ_Stack_Size 00000080

Symbol: IRQ_Stack_Size
   Definitions
      At line 26 in file init_boot.s
   Uses
      At line 175 in file init_boot.s
Comment: IRQ_Stack_Size used once
I_BIT 00000080



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


Symbol: I_BIT
   Definitions
      At line 15 in file init_boot.s
   Uses
      At line 97 in file init_boot.s
      At line 173 in file init_boot.s

SVC_Stack_Size 00000100

Symbol: SVC_Stack_Size
   Definitions
      At line 23 in file init_boot.s
   Uses
      None
Comment: SVC_Stack_Size unused
UND_Stack_Size 00000000

Symbol: UND_Stack_Size
   Definitions
      At line 22 in file init_boot.s
   Uses
      None
Comment: UND_Stack_Size unused
USR_Stack_Size 00000400

Symbol: USR_Stack_Size
   Definitions
      At line 27 in file init_boot.s
   Uses
      None
Comment: USR_Stack_Size unused
18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Image$$ARM_LIB_STACK$$Base 00000000

Symbol: Image$$ARM_LIB_STACK$$Base
   Definitions
      At line 128 in file init_boot.s
   Uses
      None
Comment: Image$$ARM_LIB_STACK$$Base unused
Image$$ARM_LIB_STACK$$ZI$$Limit 00000000

Symbol: Image$$ARM_LIB_STACK$$ZI$$Limit
   Definitions
      At line 129 in file init_boot.s
   Uses
      At line 141 in file init_boot.s
      At line 170 in file init_boot.s

Image$$Fixed_region$$Limit 00000000

Symbol: Image$$Fixed_region$$Limit
   Definitions
      At line 124 in file init_boot.s
   Uses
      At line 149 in file init_boot.s
Comment: Image$$Fixed_region$$Limit used once
Image$$Relocate_region$$Base 00000000

Symbol: Image$$Relocate_region$$Base
   Definitions
      At line 125 in file init_boot.s
   Uses
      At line 150 in file init_boot.s
Comment: Image$$Relocate_region$$Base used once
Image$$Relocate_region$$ZI$$Base 00000000

Symbol: Image$$Relocate_region$$ZI$$Base
   Definitions
      At line 126 in file init_boot.s
   Uses
      At line 151 in file init_boot.s
Comment: Image$$Relocate_region$$ZI$$Base used once
Image$$Relocate_region$$ZI$$Limit 00000000

Symbol: Image$$Relocate_region$$ZI$$Limit
   Definitions
      At line 127 in file init_boot.s
   Uses
      At line 162 in file init_boot.s
Comment: Image$$Relocate_region$$ZI$$Limit used once
InitHW 00000000

Symbol: InitHW
   Definitions
      At line 132 in file init_boot.s
   Uses
      At line 144 in file init_boot.s
Comment: InitHW used once
__main 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: __main
   Definitions
      At line 183 in file init_boot.s
   Uses
      At line 184 in file init_boot.s
Comment: __main used once
8 symbols
378 symbols in table
